<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数组常用方法，掌握这些就够了</title>
      <link href="/2017/12/15/%E6%95%B0%E7%BB%84%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%EF%BC%8C%E6%8E%8C%E6%8F%A1%E8%BF%99%E4%BA%9B%E5%B0%B1%E5%A4%9F%E4%BA%86/"/>
      <url>/2017/12/15/%E6%95%B0%E7%BB%84%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%EF%BC%8C%E6%8E%8C%E6%8F%A1%E8%BF%99%E4%BA%9B%E5%B0%B1%E5%A4%9F%E4%BA%86/</url>
      
        <content type="html"><![CDATA[<h1 id="数组遍历的一些方法"><a href="#数组遍历的一些方法" class="headerlink" title="数组遍历的一些方法"></a>数组遍历的一些方法</h1><h2 id="1、forEach"><a href="#1、forEach" class="headerlink" title="1、forEach()"></a>1、forEach()</h2><pre><code>forEach((item, index, self) =&gt;{ //数组处理代码  })    对数组进行遍历，对数组中的每一个成员执行回调函数中的代码可以对数组中的成员    进行筛选，也可以对每一个成员进行一些操作，没有返回值参数：    item：数组遍历的当前成员（非必须参数）    index：数组当前项的索引（非必须参数）    sele：数组本身（非必须参数）<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [1, 2, 3]</span><br><span class="line">arr.forEach((item, index, arrself) &#x3D; &gt;&#123;</span><br><span class="line">    console.log(item, index, arrself)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></code></pre><h2 id="2、filter"><a href="#2、filter" class="headerlink" title="2、filter()"></a>2、filter()</h2><pre><code>filter((item, index, self) =&gt;{ //数组处理代码  })    对数组进行过滤，对数组中的每一个成员执行回调函数中的代码可以对数组中的成员    进行筛选，返回一个满足条件的新数组<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [11, 20, 35, 3, 15]</span><br><span class="line">var res &#x3D; arr.filter((item, index, arrself) &#x3D; &gt;&#123;</span><br><span class="line">    return item &gt;&#x3D; 15 </span><br><span class="line">&#125;)</span><br><span class="line">console.log(res)    &#x2F;&#x2F;返回数组[20, 35, 15]</span><br></pre></td></tr></table></figure></code></pre><h2 id="3、map"><a href="#3、map" class="headerlink" title="3、map()"></a>3、map()</h2><pre><code>map((item, index, self) =&gt;{ //数组处理代码  })    对数组进行映射，对数组中的每一个成员执行回调函数中的代码，返回一个满足条件    的新数组，常用于把数组中每一项成员执行相同操作<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [1, 2, 3]</span><br><span class="line">var res &#x3D; arr.map((item, index, arrself) &#x3D; &gt;&#123;</span><br><span class="line">    return item * 2 </span><br><span class="line">&#125;)</span><br><span class="line">console.log(res)    &#x2F;&#x2F;返回数组[2, 4, 6]</span><br></pre></td></tr></table></figure></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 数组方法 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
